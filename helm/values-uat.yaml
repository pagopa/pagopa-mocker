microservice-chart:
  namespace: "mock"
  nameOverride: ""
  fullnameOverride: ""
  image:
    repository: ghcr.io/pagopa/pagopa-mocker
    tag: "1.2.4"
    pullPolicy: Always
  livenessProbe:
    httpGet:
      path: /mocker/info
      port: 8080
    initialDelaySeconds: 90
    failureThreshold: 6
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /mocker/info
      port: 8080
    initialDelaySeconds: 90
    failureThreshold: 6
    periodSeconds: 10
  deployment:
    create: true
  service:
    create: true
    type: ClusterIP
    ports:
      - 8080
  ingress:
    create: true
    host: "weudev.mock.internal.dev.platform.pagopa.it"
    path: /pagopa-mocker(/|$)(.*)
  serviceAccount:
    create: false
    annotations: {}
    name: ""
  podAnnotations: {}
  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault
  securityContext:
    allowPrivilegeEscalation: false
  resources:
    requests:
      memory: "512Mi"
      cpu: "0.25"
    limits:
      memory: "768Mi"
      cpu: "0.5"
  autoscaling:
    enable: true
    minReplica: 1
    maxReplica: 2
    pollingInterval: 10 # seconds
    cooldownPeriod: 50 # seconds
    triggers:
      - type: cpu
        metadata:
          # Required
          type: Utilization # Allowed types are 'Utilization' or 'AverageValue'
          value: "75"
  envConfig:
    WEBSITE_SITE_NAME: 'pagopamocker'
    OTEL_ENDPOINT: "http://otel-collector.elastic-system.svc.cluster.local:4317"
    ENV: 'aks-dev'
    APP_LOGGING_LEVEL: 'DEBUG'
    DEFAULT_LOGGING_LEVEL: 'INFO'
    REDIS_HOST: "pagopa-d-redis.redis.cache.windows.net"
    REDIS_PORT: "6380"
    MOCKER_CACHE_ENABLED: 'false'
    MOCKER_REQUEST_SPECIALHEADERS: 'soapaction,x-host-url,x-host-port,x-host-path'
  secretProvider:
    create: true
    envSecrets:
      MONGODB_CONNECTION_URI: 'db-mocker-uri'
      REDIS_PASSWORD: 'redis-password'
      OTEL_AUTH_BEARER: "otel-auth-bearer"
    keyvault:
      name: "pagopa-u-mock-kv"
      tenantId: "7788edaf-0346-4068-9d79-c868aed15b3d"
  tmpVolumeMount:
    create: true
  nodeSelector: {}
  tolerations: []
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node_type
                operator: In
                values:
                  - user
  canaryDelivery:
    deployment:
      image:
        tag: "0.0.0"
    create: false
